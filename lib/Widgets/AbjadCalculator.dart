import 'package:flutter/material.dart';

class UrduAbjadCalculator extends StatefulWidget {
  const UrduAbjadCalculator({super.key});

  @override
  State<UrduAbjadCalculator> createState() => _UrduAbjadCalculatorState();
}

class _UrduAbjadCalculatorState extends State<UrduAbjadCalculator> {
  final TextEditingController _controller = TextEditingController();
  int total = 0;
  String breakdown = "";

  final Map<String, int> abjadMap = {
    'ÿß': 1,
    'ÿ®': 2,
    'Ÿæ': 2,
    'ÿ™': 400,
    'Ÿπ': 400,
    'ÿ´': 500,
    'ÿ¨': 3,
    '⁄Ü': 3,
    'ÿ≠': 8,
    'ÿÆ': 600,
    'ÿØ': 4,
    '⁄à': 4,
    'ÿ∞': 700,
    'ÿ±': 200,
    '⁄ë': 200,
    'ÿ≤': 7,
    '⁄ò': 7,
    'ÿ≥': 60,
    'ÿ¥': 300,
    'ÿµ': 90,
    'ÿ∂': 800,
    'ÿ∑': 9,
    'ÿ∏': 900,
    'ÿπ': 70,
    'ÿ∫': 1000,
    'ŸÅ': 80,
    'ŸÇ': 100,
    '⁄©': 20,
    '⁄Ø': 20,
    'ŸÑ': 30,
    'ŸÖ': 40,
    'ŸÜ': 50,
    '⁄∫': 50,
    'Ÿà': 6,
    '€Å': 5,
    '⁄æ': 5,
    'ÿ°': 0,
    '€å': 10,
    '€í': 10,
  };

  void _calculateAbjad(String name) {
    name = name.trim().replaceAll(RegExp(r'[^ÿ°-€ø]'), '');
    int sum = 0;
    List<String> parts = [];

    for (var char in name.characters) {
      int value = abjadMap[char] ?? 0;
      if (value > 0) {
        parts.add('$char($value)');
        sum += value;
      }
    }

    setState(() {
      total = sum;
      breakdown = parts.join(' + ');
    });
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: Directionality(
        textDirection: TextDirection.rtl,
        child: Center(
          child: Card(
            margin: const EdgeInsets.all(16),
            shape: RoundedRectangleBorder(
              borderRadius: BorderRadius.circular(20),
            ),
            elevation: 8,
            child: Padding(
              padding: const EdgeInsets.all(24.0),
              child: SingleChildScrollView(
                child: Column(
                  mainAxisSize: MainAxisSize.min,
                  children: [
                    const Text(
                      'üî¢ ÿßÿ®ÿ¨ÿØ€å ÿπÿØÿØ ⁄©€åŸÑ⁄©ŸàŸÑ€åŸπÿ±',
                      style: TextStyle(
                        fontSize: 22,
                        fontWeight: FontWeight.bold,
                        fontFamily: "urdu",
                        
                      ),
                    ),
                    const SizedBox(height: 12),
                    const Text(
                      'ÿßÿ®ÿ¨ÿØ ÿß€å⁄© ŸÇÿØ€åŸÖ ÿ≥ÿ≥ŸπŸÖ €Å€í ÿ¨ÿ≥ ŸÖ€å⁄∫ €Åÿ± ÿ≠ÿ±ŸÅ ⁄©ÿß ÿß€å⁄© ÿπÿØÿØ €ÅŸàÿ™ÿß €Å€í€î '
                      'ÿ¨€åÿ≥€í "ÿßŸÑŸÑ€Å" ⁄©ÿß ÿπÿØÿØ 66 €Å€íÿå ÿßÿ≥ ŸÑ€å€í ÿßŸÑŸÑ€Å ⁄©ÿß ŸÜÿßŸÖ 66 ÿ®ÿßÿ± Ÿæ⁄ë⁄æŸÜÿß ÿ±Ÿàÿ≠ÿßŸÜ€åÿ™ ⁄©€í ŸÑ€å€í ÿ®€Åÿ™ÿ±€åŸÜ ÿ≥ŸÖÿ¨⁄æÿß ÿ¨ÿßÿ™ÿß €Å€í€î '
                      'ÿ¢Ÿæ ÿ®⁄æ€å ÿßŸæŸÜ€í €åÿß ⁄©ÿ≥€å ÿ®⁄æ€å ŸÜÿßŸÖ ⁄©ÿß ÿπÿØÿØ ŸÜ⁄©ÿßŸÑ ÿ≥⁄©ÿ™€í €Å€å⁄∫ ÿ™ÿß⁄©€Å ÿßÿ≥ ⁄©ÿß ÿ±Ÿàÿ≠ÿßŸÜ€å ÿßÿ´ÿ± ÿ¨ÿßŸÜ ÿ≥⁄©€å⁄∫ÿå ',
                      textAlign: TextAlign.justify,
                      style: TextStyle(
                        fontSize: 16,
                        color: Colors.black87,
                        fontFamily: "urdu",
                      ),
                    ),

                    const SizedBox(height: 20),
                    TextField(
                      controller: _controller,
                      textDirection: TextDirection.rtl,
                      decoration: InputDecoration(
                        hintText: 'ÿßŸæŸÜÿß ŸÜÿßŸÖ ÿØÿ±ÿ¨ ⁄©ÿ±€å⁄∫',
                        hintStyle: TextStyle(fontFamily: "urdu"),
                        prefixIcon: const Icon(Icons.edit),
                        border: OutlineInputBorder(
                          borderRadius: BorderRadius.circular(12),
                        ),
                      ),
                    ),
                    const SizedBox(height: 16),
                    ElevatedButton.icon(
                      onPressed: () => _calculateAbjad(_controller.text),
                      icon: const Icon(Icons.calculate),
                      label: const Text('ÿ≠ÿ≥ÿßÿ® ⁄©ÿ±€å⁄∫'),
                      style: ElevatedButton.styleFrom(
                        backgroundColor: Colors.teal,
                        foregroundColor: Colors.white,
                        shape: RoundedRectangleBorder(
                          borderRadius: BorderRadius.circular(12),
                        ),
                      ),
                    ),
                    const SizedBox(height: 20),
                    if (_controller.text.isNotEmpty) ...[
                      Text(
                        'üìø ⁄©ŸÑ ÿπÿØÿØ: $total',
                        style: const TextStyle(
                          fontSize: 20,
                          fontWeight: FontWeight.bold,
                        ),
                      ),
                      const SizedBox(height: 10),
                      Text(
                        breakdown,
                        textAlign: TextAlign.center,
                        style: const TextStyle(fontSize: 16),
                      ),
                    ],
                  ],
                ),
              ),
            ),
          ),
        ),
      ),
    );
  }
}
